<style lang="less">
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'

  import {setStore} from 'wepy-redux'
  import configStore from './store'
  import Promise from 'promise-polyfill'

  const store = configStore()
  setStore(store)

  import {
    USER_SPECICAL_INFO,
    USER_INFO,
    SYSTEM_INFO,
    ADDRESS_ID,
    SEL_CLASS_CODE
  } from "./utils/constant";

  import {
    wxJsCode2Session,
    user2session
  } from './api/api';

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/index',
        'pages/demo',
        'pages/minui',
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#fff',
        navigationBarTitleText: '小小收银',
        navigationBarTextStyle: 'black',
        enablePullDownRefresh: false,
        backgroundColor: '#EFEFEF'
      },
      tabBar: {
        color: '#999999',
        selectedColor: '#ff6a3c',
        backgroundColor: '#ffffff',
        borderStyle: 'black',
        list: [{
          pagePath: 'pages/index',
          text: '首页',
          iconPath: 'images/icon_home.png',
          selectedIconPath: 'images/icon_home_active.png'
        }, {
          pagePath: 'pages/demo',
          text: '分类',
          iconPath: 'images/icon_classify.png',
          selectedIconPath: 'images/icon_classify_active.png'
        }, {
          pagePath: 'pages/minui',
          text: '购物车',
          iconPath: 'images/icon_shop_cart.png',
          selectedIconPath: 'images/icon_shop_cart_active.png'
        }, {
          pagePath: 'pages/demo',
          text: '我',
          iconPath: 'images/icon_info.png',
          selectedIconPath: 'images/icon_info_active.png'
        }]
      }
    }

    globalData = {
      userInfo: null
    }

    constructor() {
      super()
      this.use('requestfix')
      //启用promise
      this.use('promisify')
    }

    async onLaunch() {
      let _this = this;
      this.testAsync()

      //用户信息
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      if (!userSpecialInfo.token || userSpecialInfo.expries < (Date.now() / 1000 + 600)) {
        //微信帐号登录
        let res = await wepy.login();
        //存储userInfo 
        let ui = await wepy.getUserInfo();
        wepy.setStorageSync(USER_INFO, ui.userInfo);

        //存储系统信息 
        let systemInfo = wepy.getSystemInfoSync();
        wepy.setStorageSync(SYSTEM_INFO, systemInfo);

        //执行后台登录
        wxJsCode2Session({
          query: {
            jsCode: res.code,
            nickName: ui.userInfo.nickName
          }
        }).then(resp => {
          let {code, result, msg} = resp.data
          if (code === 0) {
            let specicalInfo = {
              token: result.token,
              expries: Date.now() / 1000 + result.expries
            }
            //存储用户token
            wepy.setStorageSync(USER_SPECICAL_INFO, specicalInfo);
          } else {
            /* wepy.showToast({
               title: msg,
               image: '/images/alert.png',
               duration: 2000
             })*/
            wx.showModal({
              title: "获取token失败",
              content: msg,
              showCancel: false,
              confirmText: "确定"
            })
          }
        });
      }
    }

    sleep(s) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve('promise resolved')
        }, s * 1000)
      })
    }

    async testAsync() {
      const data = await this.sleep(3)
      //console.log(data)
    }

    async getUserInfo() {
      if (this.globalData.userInfo) {
        return this.globalData.userInfo
      }
      let ui = wepy.getStorageSync(USER_INFO)
      return ui ? ui : (await wepy.getUserInfo()).getUserInfo()
    }
  }
</script>
